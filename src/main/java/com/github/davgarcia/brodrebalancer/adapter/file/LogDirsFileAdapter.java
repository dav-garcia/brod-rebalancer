package com.github.davgarcia.brodrebalancer.adapter.file;

import com.beust.jcommander.Parameter;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.github.davgarcia.brodrebalancer.BrodRebalancerException;
import com.github.davgarcia.brodrebalancer.LogDirs;
import com.github.davgarcia.brodrebalancer.LogDirsInput;
import jakarta.validation.ConstraintViolation;
import jakarta.validation.Validation;
import jakarta.validation.Validator;
import jakarta.validation.ValidatorFactory;
import lombok.AccessLevel;
import lombok.Getter;
import lombok.Setter;

import java.io.File;
import java.io.IOException;
import java.util.stream.Collectors;

public class LogDirsFileAdapter implements LogDirsInput<LogDirsFileAdapter.CliOptions> {

    private final ObjectMapper objectMapper;
    private final Validator validator;
    private final CliOptions cliOptions;

    public LogDirsFileAdapter() {
        objectMapper = new ObjectMapper();
        try (ValidatorFactory factory = Validation.buildDefaultValidatorFactory()) {
            validator = factory.getValidator();
        }
        cliOptions = new CliOptions();
    }

    @Override
    public CliOptions getCliOptions() {
        return cliOptions;
    }

    @Override
    public LogDirs load() {
        try {
            if (cliOptions.getInputPath() == null) {
                throw new BrodRebalancerException("Required option is missing: --input-path");
            }

            final var result = objectMapper.readValue(new File(cliOptions.getInputPath()), LogDirs.class);
            final var violations = validator.validate(result);
            if (!violations.isEmpty()) {
                final var errors = violations.stream()
                        .map(ConstraintViolation::getMessage)
                        .collect(Collectors.joining(System.lineSeparator()));
                throw new BrodRebalancerException("Invalid log dirs:" + System.lineSeparator() + errors);
            }
            return result;
        } catch (IOException e) {
            throw new BrodRebalancerException("Error loading log dirs from path: " + cliOptions.getInputPath(), e);
        }
    }

    @Getter
    @Setter(AccessLevel.PACKAGE) // For testing
    public static class CliOptions {

        @Parameter(names = "--input-path",
                description = "Location of the JSON file generated by kafka-log-dirs.sh. Required if using JSON file input.")
        private String inputPath;
    }
}
